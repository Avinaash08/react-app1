name: React_node.yml

on:
  pull_request:
    branches: [ dev ]
env:
  PR: ${{ github.event.pull_request.title }}  
jobs:
  build:
   # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install 

    - name: Run the cypress tests
      run: npm test

    - name: Build
      run: npm run build
      env:
          CI: ""
    - name: Generate deployment package
      run: zip -r build.zip ./build/*

    - name: Nginx Config File builder
      run: |
          echo "server {"  >> ${PR}.conf
          echo "     listen 80;" >> ${PR}.conf
          echo "     listen [::]:80;" >> ${PR}.conf
          echo "     server_name ${PR}.com www.${PR}.com;" >> ${PR}.conf

          echo "     root /home/ubuntu/${PR}/build;" >> ${PR}.conf

          echo "     index index.html index.htm;" >> ${PR}.conf

          echo "     location / {" >> ${PR}.conf
          echo "         try_files $uri $uri/ =404;" >> ${PR}.conf
          echo "     }" >> ${PR}.conf
          echo "}" >> ${PR}.conf

    - name: Copy Build Artifacts & Deploy
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      env:
        LASTSSH: "Storing the Build Artifact in a separate location"
      with:
        host: ${{ secrets.HOSTNAME }}
        user: ${{ secrets.USERNAME }}
        key: ${{ secrets.AWS_PRIVATE_KEY }}
        connect_timeout: 10s
        first_ssh: |
          rm -rf /home/ubuntu/${PR} 
          mkdir -p /home/ubuntu/${PR}
          mkdir -p /home/ubuntu/nginxconf/
        scp: |
          './${PR}.conf' => /home/ubuntu/nginxconf/
          './build.zip' => /home/ubuntu/${PR}/
        last_ssh: |
          echo $LASTSSH  
          unzip /home/ubuntu/${PR}/build.zip -d /home/ubuntu/${PR}/
          mv /home/ubuntu/${PR}/build.zip /tmp/${PR}.zip
          ls -ll /tmp/
    
    - name: Add Tag to GitHub
      #uses: EndBug/latest-tag@latest
      #env:
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #with:
        #ref: 'Passed'
        #force-branch: true

    - uses: actions-ecosystem/action-get-merged-pull-request@v1
      id: get-merged-pull-request
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions-ecosystem/action-release-label@v1
      id: release-label
      if: ${{ steps.get-merged-pull-request.outputs.title != null }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        labels: ${{ steps.get-merged-pull-request.outputs.labels }}

    - uses: actions-ecosystem/action-get-latest-tag@v1
      id: get-latest-tag
      if: ${{ steps.release-label.outputs.level != null }}
      with:
        semver_only: true
        
    - name: Slack Notification
      uses: act10ns/slack@v1
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      with: 
        status: ${{ job.status }}
        notify_when: 'failure'
        channel: '#results-cx'
        #message: Deployed {{ env.GITHUB_REF_NAME }} branch Successfully
      if: always() 
